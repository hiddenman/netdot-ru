<%doc>
    Show a visual representation of the address space of the given container.
</%doc>

<%args>
$network
$rowsize         => 22
$dividefreespace => 'max'
</%args>

<%init>
use utf8;
my $BLOCK_MAX = Netdot->config->get('CONTAINER_BLOCK_VIEW_MAX_PREFIX');
if ( $network->version == 4 && $network->prefix < $BLOCK_MAX ){
    print "This block is too big for the block view";
    $m->abort;
}elsif ( $network->version == 6 ){
    $m->comp('/generic/error.mhtml', error=>"This component cannot currently handle IPv6 blocks");
    $m->abort;
}
</%init>


<%perl>
    my $mask = $network->prefix;
    my $network_addr = NetAddr::IP->new($network->address,$network->prefix); # the address of the start of the subnet

    my $minrowsize = $mask;
    my $maxrowsize = ($network->version == 4)?32:128;
    my $minpartitionsize = $mask;
    my $maxpartitionsize = ($network->version == 4)?32:128;

    # set the visual size of the table on the screen:
    $rowsize = int($rowsize);
    $rowsize = 32 if ($rowsize > 32 && $network->version == 4);
    $rowsize = 128 if ($rowsize > 128 && $network->version == 6);

    # there should never be more /32's in the row than there are in the subnet
    $rowsize = ($rowsize>$mask?$rowsize:$mask);
    my $cellsperrow = ($rowsize >= 22)?1024:2**(32-$rowsize);

    my $maxmask = $rowsize + 10;
    $maxmask = $maxmask > 32 ? 32 : $maxmask;

    my @children = sort { $a->address_numeric <=> $b->address_numeric } $network->children;
    my @freespace = sort $network->free_space($dividefreespace);
    my @new_blocks = map { $_->cidr } @freespace; # for later


    ######################################################################
    ## Now output the HTML
    ######################################################################

    sub print_net_block {
        my ($class, $title, $width, $link, $cellsperrow) = @_;

        if ($width > $cellsperrow) {
            my $height = $width / $cellsperrow * 15;
            print <<EOF
<td title="$title"><a href="$link" class="$class" style="display: block; width: $cellsperrow; border: 0; height: $height"><table>
EOF
;
            for (my $i = 0; $i < $width / $cellsperrow; $i++) {
                print '<tr><td></td></tr>';
            }
            print '</table></a></td>';
        } else {
            print <<EOF
<td title="$title"><a href="$link" class="$class" style="display: block; width: $width; border: 0; height: 15px"></a></td>
EOF
        }
    }
    
    print "<br>";

    print "<center>";
    print "<table style='width:45em'><tr>";
    print '<td style="text-align:right;vertical-align:middle;">Zoom: Set one row equal to ';
    print '<select name="rowsize" class="small" onchange="window.location=\'ip.html?id='.$network->id.'&view_availability=1&view_format=block&rowsize=\'+this.options[this.selectedIndex].value+\'&dividefreespace='.$dividefreespace.'\'">';
    for( my $i=$minrowsize; $i<=$maxrowsize; $i++ ) {
        print '<option value="'.$i.'"'.($rowsize==$i?' selected':'').'>/'.$i.'</option>';
    }
    print '</select>';
    print "</td>";
    print '<td style="text-align:right;vertical-align:middle;">Partition: Set max free space size to ';
    print '<select name="partitionsize" class="small" onchange="window.location=\'ip.html?id='.$network->id.'&view_availability=1&view_format=block&rowsize='.$rowsize.'&dividefreespace=\'+this.options[this.selectedIndex].value">';
    print '<option value="max">unlimited</option>';
    for( my $i=$minpartitionsize; $i<=$maxpartitionsize; $i++ ) {
        print '<option value="'.$i.'"'.($dividefreespace==$i?' selected':'').'>/'.$i.'</option>';
    }
    print '</select>';
    print "</td></tr></table>";
    print "</center>";

    print "<br>";

    print '<table class="ipcontainertable" style="width:' . ($cellsperrow+100) . ';" cellpadding="0" cellspacing="0"><tr class="outerrow"><td><table cellpadding="0" cellspacing="0" border="0">';

    my $count = 0;
    my $prevclass = "";
    my $needtr = 1;
    while ( @children || @freespace ) {
        my ($class, $rowtitle, $title, $width, $link);
        if ( !@children || (@freespace && $freespace[0]->numeric < $children[0]->address_numeric) ) {
            my $child = shift @freespace;
            $class = "ipaddr_available";
            if ($prevclass eq $class) { $class .= "_2"; }
            $rowtitle = $child->addr;
            $title = $child;
            $link = "ip.html?add_block_prefix=$child&add_block_parent=".$network->id."&_action=ADD_BLOCK";
            $width = ($rowsize >= 22)?(2**(32-$child->masklen))*(2**($rowsize-22)):2**(32-$child->masklen);
            $count += $width;
            $prevclass = $class;
        } elsif (!@freespace || $freespace[0]->numeric > $children[0]->address_numeric) {
            my $child = shift @children;
            my $status = $child->status->name;
            $class = "ipaddr_" . lc($status);
            if ($prevclass eq $class) { $class .= "_2"; }
            $rowtitle = $child->address;
	    $title = $child->cidr;
	    if ( $child->description ){
		$title .= " (". $child->description() .")" ;
	    }
            $width = ($rowsize >= 22)?(2**(32-$child->prefix))*(2**($rowsize-22)):2**(32-$child->prefix);
            $count += $width;
            $link = "ip.html?id=$child";
            $prevclass = $class;
        } else {
            print STDERR $freespace[0] . " " . $children[0]->get_label() . "\n";
	    $m->comp('/generic/error.mhtml', error=>"Invalid condition.  This should not happen.");
        }

        if ($needtr) { 
            $needtr = 0;
            print '<tr class="outerrow"><td width="100">' . $rowtitle . '</td><td><table cellpadding="0" cellspacing="0"><tr>'; 
        }

        &print_net_block($class, $title, $width, $link, $cellsperrow);

        if ($count >= $cellsperrow) { 
            $needtr = 1;
            $count = 0;
            print '</tr></table></td></tr>';
        }
    }
</%perl>

</tr></table></td></tr></table>

% if ( $dividefreespace ne 'max' ){
%     my $new_blocks_list = join ',', @new_blocks;
<form name="new_blocks_form" action="ip.html" method="POST">
    <input type="hidden" name="id" value="<% $network %>">
    <input type="hidden" name="new_blocks_list" value="<% $new_blocks_list %>">
    <input type="hidden" name="_action" value="ADD_BLOCKS">
    <p>
    <center>
        Create new blocks from free partitions as  
        <select name="new_blocks_status">
           <option value="Select" selected>-- Select --</option>
           <option value="Subnet">Subnet</option>
           <option value="Container">Container</option>
        </select>
    <input type="submit" name="submit" value="Go">
    </center>
</form>
% }
